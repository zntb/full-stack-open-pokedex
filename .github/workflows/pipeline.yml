name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}

    steps:
      - name: Run actions/checkout@v4
        uses: actions/checkout@v4

      - name: Run actions/setup-node@v4
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: npm install
        run: npm install

      - name: lint
        run: npm run eslint

      - name: build
        run: npm run build

      - name: Start Application
        run: npm run start-prod &

      - name: test
        run: npm test

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: e2e tests
        run: npm run test:e2e

      - name: Trigger deployment
        if: ${{ env.DEPLOY_FLAG == 'true' }}
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

      - name: Notify success
        uses: stegzilla/discord-notify@v4
        if: ${{ env.DEPLOY_FLAG == 'true' && success() }}
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: A new version of Pokedex deployed!
          message: '**${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}**'
          include_image: true
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          username: GitHub PR Notifier

      - name: Notify failure
        uses: stegzilla/discord-notify@v4
        if: failure()
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: Deployment failed!
          message: '**${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}**'
          include_image: true
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          username: GitHub PR Notifier

  tag_release:
    if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), 'skip') }}
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: main

      - name: Health Check
        run: |
          echo "Waiting for server to start..."
          sleep 30
          echo "Checking health of deployed app..."
          response=$(curl --fail https://full-stack-open-pokedex-jvcn.onrender.com/healthz)
          if [ "$response" == "ok" ]; then
            echo "Health check passed!"
          else
            echo "Health check failed!"
            exit 1
          fi
